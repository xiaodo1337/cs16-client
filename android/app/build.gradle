import java.time.LocalDateTime
import java.time.Month
import java.time.temporal.ChronoUnit

apply plugin: 'com.android.application'

android {
    namespace 'su.xash.cs16client'
    ndkVersion = "27.2.12479018"
    compileSdk 35

    defaultConfig {
        applicationId 'su.xash.cs16client'
        versionName '1.35'
        versionCode getBuildNum()
        minSdkVersion 21
        targetSdk 35
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    externalNativeBuild {
        cmake {
            version '3.22.1'
            path file('../../CMakeLists.txt')
        }
    }

    lint {
        abortOnError false
    }

    androidResources {
        noCompress += ""
    }

    sourceSets {
        main {
            assets {
                srcDirs += ["${project.projectDir}/../../3rdparty/cs16client-extras", "${project.projectDir}/../../3rdparty/yapb/cfg"]
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        register("ci") {
            initWith(getByName("release"))

            externalNativeBuild.cmake {
                arguments "-DCMAKE_BUILD_TYPE=RelWithDebInfo"
            }
        }
    }
}

static def getBuildNum() {
    LocalDateTime now = LocalDateTime.now()
    LocalDateTime releaseDate = LocalDateTime.of(2015, Month.OCTOBER, 29, 0, 0, 0)
    int qBuildNum = releaseDate.until(now, ChronoUnit.DAYS)
    int minuteOfDay = now.getHour() * 60 + now.getMinute()
    return qBuildNum * 10000 + minuteOfDay
}